<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.example</groupId>
    <artifactId>ExpenseTracker</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <dependencies>
        <!-- JUnit for testing -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>5.10.0</version> <!-- Use the latest version -->
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>5.10.0</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>


    <!-- PIT Mutation Testing Plugin -->
    <dependency>
        <groupId>org.pitest</groupId>
        <artifactId>pitest-junit5-plugin</artifactId>
        <version>1.1.0</version>
        <scope>test</scope>
    </dependency>

    <!-- Mockito -->
    <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>5.5.0</version>
        <scope>test</scope>
    </dependency>
    <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.13.2</version>
        <scope>test</scope>
    </dependency>


    <!-- H2 Database for in-memory storage -->


    <!-- SLF4J for logging (optional) -->
    <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>1.7.30</version>
    </dependency>
    </dependencies>
    <!-- Logging with logback (optional) -->


    <build>
        <plugins>
            <!-- Surefire Plugin for running JUnit 5 tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version> <!-- Stable version -->
                <configuration>
                    <forkCount>1</forkCount> <!-- Run tests in one process -->
                    <reuseForks>false</reuseForks> <!-- Do not reuse forks -->
                    <redirectTestOutputToFile>false</redirectTestOutputToFile> <!-- Avoid stream corruption by not redirecting output -->
                    <consoleCharset>UTF-8</consoleCharset> <!-- Ensure correct encoding -->
                    <parallel>none</parallel> <!-- Disable parallel test execution -->
                    <timeout>60000</timeout> <!-- Increase the timeout to avoid timeout issues -->
                </configuration>
            </plugin>

            <!-- PIT Mutation Testing Plugin -->
            <plugin>
                <groupId>org.pitest</groupId>
                <artifactId>pitest-maven</artifactId>
                <version>1.14.0</version>
                <configuration>
                    <targetTests>
                        <param>org.example.*</param>
                        <param>*</param> <!-- Ensure unpackage Randoop tests are also covered -->
                    </targetTests>
                    <targetClasses>
                        <param>org.example.*</param>
                    </targetClasses>
                    <verbose>true</verbose>
                </configuration>
                <executions>
                    <execution>
                        <id>mutation-testing</id>
                        <phase>test</phase>
                        <goals>
                            <goal>mutationCoverage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- JaCoCo Plugin for Code Coverage -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.8</version> <!-- Latest stable version -->
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal> <!-- Prepare agent to collect coverage data -->
                            <goal>report</goal> <!-- Generate code coverage report -->
                        </goals>
                        <phase>test</phase> <!-- Bind to the test phase -->
                    </execution>
                </executions>
                <configuration>
                    <outputDirectory>${project.build.directory}/jacoco-coverage</outputDirectory> <!-- Output directory for the reports -->
                    <append>true</append> <!-- Append coverage data to existing reports -->
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>


